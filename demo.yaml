apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros2-talker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ros2-talker
  template:
    metadata:
      labels:
        app: ros2-talker
    spec:
      containers:
      - image: osrf/ros:eloquent-desktop 
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && ros2 run demo_nodes_cpp talker"]
        imagePullPolicy: IfNotPresent
        name: ros2-talker
      imagePullSecrets:
      - name: docker-registry
      nodeSelector:
        role: slave1
      restartPolicy: Always
     # hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros2-listener-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ros2-listener-0
  template:
    metadata:
      labels:
        app: ros2-listener-0
    spec:
      containers:
      - image: osrf/ros:eloquent-desktop 
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && ros2 run demo_nodes_cpp listener"]
        imagePullPolicy: IfNotPresent
        name: ros2-listener
      imagePullSecrets:
      - name: docker-registry
      nodeSelector:
        role: slave1
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      restartPolicy: Always
     # hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ros2-listener-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ros2-listener-1
  template:
    metadata:
      labels:
        app: ros2-listener-1
    spec:
      containers:
      - image: osrf/ros:eloquent-desktop 
        command: ["/bin/bash", "-c"]
        args: ["source /opt/ros/$ROS_DISTRO/setup.bash && ros2 run demo_nodes_cpp listener"]
        imagePullPolicy: IfNotPresent
        name: ros2-listener
      imagePullSecrets:
      - name: docker-registry
      nodeSelector:
        role: slave2
      restartPolicy: Always
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
